{"version":3,"sources":["services/persons.js","components/PersonFrom.js","components/Persons.js","components/Notification.js","components/App.js","index.js"],"names":["baseUrl","person","axios","post","then","response","data","get","id","delete","obj","put","PersonForm","onSub","onChangeCallbacks","values","handleChange","onSubmit","value","onChange","type","Person","p","handleClick","name","number","onClick","Persons","filter","persons","map","key","RegExp","test","Notification","message","msgClass","className","Filter","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setMessage","setMsgClass","useEffect","personService","initialPersons","updatePerson","find","window","confirm","changedPerson","newPerson","showMessage","catch","error","sucess","setTimeout","callback","e","target","preventDefault","some","concat","ReactDOM","render","document","getElementById"],"mappings":"+OACMA,EAAU,eAoBD,EAbA,SAACC,GAEZ,OADgBC,IAAMC,KAAKH,EAASC,GACrBG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAW9B,EAlBA,WAEX,OADgBJ,IAAMK,IAAIP,GACXI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB9B,EARD,SAACE,GAAD,OAAQN,IAAMO,OAAN,UAAgBT,EAAhB,YAA2BQ,KAQlC,EANA,SAACA,EAAIE,GAEhB,OADgBR,IAAMS,IAAN,UAAaX,EAAb,YAAwBQ,GAAME,GAC/BN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCF9BM,EAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,kBAAmBC,EAA7B,EAA6BA,OAAQC,EAArC,EAAqCA,aAArC,OACf,0BAAMC,SAAUJ,GACZ,sCACU,2BAAOK,MAAOH,EAAO,GAAII,SAAUH,EAAaF,EAAkB,OAE5E,wCACY,2BAAOI,MAAOH,EAAO,GAAII,SAAUH,EAAaF,EAAkB,OAE9E,6BACI,4BAAQM,KAAK,UAAb,UCTNC,EAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,EAAGC,EAAL,EAAKA,YAAL,OACX,6BACKD,EAAEE,KADP,IACcF,EAAEG,OACZ,4BAAQC,QAASH,GAAjB,YA6BOI,EAxBC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAASN,EAAkB,EAAlBA,YAChC,MAAc,KAAXK,EACQC,EACMC,KAAI,SAAAR,GAAC,OACF,kBAAC,EAAD,CACIA,EAAGA,EACHS,IAAKT,EAAEd,GACPe,YAAa,kBAAMA,EAAYD,EAAEd,UAMrDqB,EACKD,QAAO,SAAAN,GAAC,OAAI,IAAIU,OAAOJ,EAAQ,KAAKK,KAAKX,EAAEE,SAC3CM,KAAI,SAAAR,GAAC,OACF,kBAAC,EAAD,CACIA,EAAGA,EACHS,IAAKT,EAAEd,GACPe,YAAa,kBAAMA,EAAYD,EAAEd,WChBtC0B,EAXM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC7B,OAAe,OAAZD,EACQ,KAGP,yBAAKE,UAAWD,GACXD,I,8NCDb,IAAMG,EAAS,SAAC,GAAD,IAAGV,EAAH,EAAGA,OAAQZ,EAAX,EAAWA,aAAX,OACX,kDACsB,2BAAOE,MAAOU,EAAQT,SAAUH,MAuH3CuB,EApHH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACNX,EADM,KACGY,EADH,OAEkBD,mBAAS,IAF3B,mBAENE,EAFM,KAEGC,EAFH,OAGsBH,mBAAS,IAH/B,mBAGNI,EAHM,KAGKC,EAHL,OAIgBL,mBAAS,IAJzB,mBAINZ,EAJM,KAIEkB,EAJF,OAKkBN,mBAAS,MAL3B,mBAKNL,EALM,KAKGY,EALH,OAMoBP,mBAAS,IAN7B,mBAMNJ,EANM,KAMIY,EANJ,KAQdC,qBAAU,WACNC,IAEK9C,MAAK,SAAA+C,GAAc,OAChBV,EAAWU,QACnB,IAEJ,IAAMC,EAAe,WACjB,IAAMnD,EAAS4B,EAAQwB,MAAK,SAAA/B,GAAC,OAAIA,EAAEE,OAASkB,KAE5C,GADeY,OAAOC,QAAP,UAAkBb,EAAlB,2EACL,CACN,IAAMc,E,yVAAa,IACZvD,EADY,CAEfwB,OAAQmB,IAEZM,EACYjD,EAAOO,GAAIgD,GAClBpD,MAAK,SAAAqD,GACFd,EAAW,IACXE,EAAa,IACba,EAAY,GAAD,OAAID,EAAUjC,KAAd,kCAAmD,GAC9DiB,EAAWZ,EAAQC,KAAI,SAAAR,GAAC,OACpBA,EAAEd,KAAOiD,EAAUjD,GAAKiD,EAAYnC,SAE3CqC,OAAM,SAAAC,GACHF,EAAY,kBAAD,OAAmBzD,EAAOuB,KAA1B,0CAAuE,GAClFiB,EAAWZ,EAAQD,QAAO,SAAAN,GAAC,OAAIA,EAAEd,KAAOP,EAAOO,YA+CzDkD,EAAc,SAACvB,EAAS0B,GAC1Bb,EAAYa,EAAS,SAAW,SAChCd,EAAWZ,GACX2B,YAAW,WACPf,EAAW,QACXc,EAAS,IAAO,MAGlB7C,EAAe,SAAC+C,GAAD,OAAc,SAACC,GAAD,OAAOD,EAASC,EAAEC,OAAO/C,SAE5D,OACI,6BACI,yCACA,kBAAC,EAAD,CAAciB,QAASA,EAASC,SAAUA,IAC1C,kBAAC,EAAD,CACIR,OAAQA,EACRZ,aAAcA,EAAa8B,KAE/B,yCACA,kBAAC,EAAD,CACIjC,MA9DM,SAACmD,IACfA,EAAEE,iBACCrC,EAAQsC,MAAK,SAAAlE,GAAM,OAAIA,EAAOuB,OAASkB,MACtCU,IAMAF,EAJkB,CACd1B,KAAMkB,EACNjB,OAAQmB,IAIPxC,MAAK,SAAAH,GACFwC,EAAWZ,EAAQuC,OAAOnE,IAC1B0C,EAAW,IACXE,EAAa,IACba,EAAY,SAAD,OAAUzD,EAAOuB,OAAQ,MAEvCmC,OAAM,SAAAC,GACHF,EAAYE,EAAMvD,SAASC,KAAKsD,OAAO,OA6C3C7C,OAAQ,CAAC2B,EAASE,GAClB5B,aAAcA,EACdF,kBAAmB,CAAC6B,EAAYE,KAEpC,uCACA,kBAAC,EAAD,CACIhB,QAASA,EACTD,OAAQA,EACRL,YA/CS,SAACf,GAClB,IAAMP,EAAS4B,EAAQwB,MAAK,SAAA/B,GAAC,OAAIA,EAAEd,KAAOA,KAC3B8C,OAAOC,QAAP,iBAAyBtD,EAAOuB,KAAhC,OAEX0B,EACW1C,GACNJ,MAAK,SAAAC,GACFqD,EAAY,GAAD,OAAIzD,EAAOuB,KAAX,qDAAmE,GAC9EiB,EAAWZ,EAAQD,QAAO,SAAAN,GAAC,OAAIA,EAAEd,KAAOA,SAE3CmD,OAAM,SAAAC,GACHF,EAAY,kBAAD,OAAmBzD,EAAOuB,KAA1B,0CAAuE,GAClFiB,EAAWZ,EAAQD,QAAO,SAAAN,GAAC,OAAIA,EAAEd,KAAOA,c,MClF5D6D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.01c77da7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (person) => {\n    const request = axios.post(baseUrl, person)\n    return request.then(response => response.data)\n}\n\nconst erase = (id) => axios.delete(`${baseUrl}/${id}`)\n\nconst update = (id, obj) => {\n    const request = axios.put(`${baseUrl}/${id}`, obj)\n    return request.then(response => response.data)\n}\n\n\nexport default { create, getAll, erase, update }","import React from 'react'\n\nconst PersonForm = ({ onSub, onChangeCallbacks, values, handleChange }) =>\n    <form onSubmit={onSub}>\n        <div>\n            name: <input value={values[0]} onChange={handleChange(onChangeCallbacks[0])} />\n        </div>\n        <div>\n            number: <input value={values[1]} onChange={handleChange(onChangeCallbacks[1])} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({p, handleClick}) => \n    <div>\n        {p.name} {p.number}\n        <button onClick={handleClick}>\n            delete\n        </button>\n    </div>\n\nconst Persons = ({ filter, persons, handleClick }) => {\n    if(filter === ''){\n        return persons\n                    .map(p =>\n                        <Person \n                            p={p}\n                            key={p.id}\n                            handleClick={() => handleClick(p.id)}\n                        />\n                    )\n    }\n\n    return (\n        persons\n            .filter(p => new RegExp(filter, 'i').test(p.name)))\n            .map(p => \n                <Person \n                    p={p}\n                    key={p.id}\n                    handleClick={() => handleClick(p.id)}\n                />\n            )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message, msgClass }) => {\n    if(message === null){\n        return null\n    }\n    return(\n        <div className={msgClass} >\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from '../services/persons'\nimport PersonForm from './PersonFrom'\nimport Persons from './Persons'\nimport Notification from './Notification'\n\n\nconst Filter = ({ filter, handleChange }) => \n    <div>\n        filter shown with <input value={filter} onChange={handleChange} />\n    </div>\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [ message, setMessage ] = useState(null)\n    const [ msgClass, setMsgClass ] = useState('')\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => \n                setPersons(initialPersons))\n    } , [])\n\n    const updatePerson = () => {\n        const person = persons.find(p => p.name === newName)\n        const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n        if(result){\n            const changedPerson = {\n                ...person,\n                number: newNumber\n            }\n            personService\n                .update(person.id, changedPerson)\n                .then(newPerson => {\n                    setNewName('')\n                    setNewNumber('')\n                    showMessage(`${newPerson.name}'s number changed sucessfully`, true)\n                    setPersons(persons.map(p => \n                        p.id === newPerson.id ? newPerson : p))\n                })\n                .catch(error => {\n                    showMessage(`Information of ${person.name} has already been removed from server`, false)\n                    setPersons(persons.filter(p => p.id !== person.id))\n                })\n            }\n    }\n\n    const addPerson = (e) => {\n        e.preventDefault()\n        if(persons.some(person => person.name === newName)){\n            updatePerson()\n        }else{\n            const newPerson = {\n                name: newName,\n                number: newNumber\n            }\n            personService\n                .create(newPerson)\n                .then(person => {\n                    setPersons(persons.concat(person))\n                    setNewName('')\n                    setNewNumber('')\n                    showMessage(`Added ${person.name}`, true)\n                })\n                .catch(error => {\n                    showMessage(error.response.data.error, false)\n                })\n            \n        }\n    }\n\n    const deletePerson = (id) => {\n        const person = persons.find(p => p.id === id)\n        const result = window.confirm(`Delete ${person.name}?`)\n        if(result){\n            personService\n                .erase(id)\n                .then(response => {\n                    showMessage(`${person.name} has been removed from the phonebook sucessfully`, true)\n                    setPersons(persons.filter(p => p.id !== id))\n                })\n                .catch(error => {\n                    showMessage(`Information of ${person.name} has already been removed from server`, false)\n                    setPersons(persons.filter(p => p.id !== id))\n                })\n        }\n        \n    }\n\n    const showMessage = (message, sucess) => {\n        setMsgClass(sucess ? 'sucess' : 'error')\n        setMessage(message)\n        setTimeout(() => {\n            setMessage(null)\n        }, (sucess ? 3000 : 10000))\n    }\n\n    const handleChange = (callback) => (e) => callback(e.target.value)\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} msgClass={msgClass}/>\n            <Filter \n                filter={filter} \n                handleChange={handleChange(setFilter)} \n            />\n            <h2>add a new</h2>\n            <PersonForm \n                onSub={addPerson} \n                values={[newName, newNumber]} \n                handleChange={handleChange} \n                onChangeCallbacks={[setNewName, setNewNumber]} \n            />\n            <h2>Numbers</h2>\n            <Persons \n                persons={persons} \n                filter={filter}\n                handleClick={deletePerson}\n            />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}